apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels: # these are replicaset labels
    name: app1
    tier: frontend
spec:
  replicas: 1 # we can give how many replicas we need 
  selector: # these are used to select the pod to create replicas
    matchLabels:
      name: app1
      tier: frontend
  template: # this is pod definition
    metadata:
      labels:
        name: app1
        tier: frontend         
    spec:
      containers:
      - name: app1
        image: rajikakani412/app1:v1

---
apiVersion: v1
kind: Service # this creates ClusterIP service
metadata:
  name: app1
spec:
  selector:
   name: app1
   tier: frontend
  ports:
  - name: app1-svc-port
    protocol: tcp
    port: 80 # this is service port
    targetport: 80 # this is container port. we can also give name and provide value in pod definition

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: app1
    annotations:
        #alb.ingress.kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:545009839752:certificate/8a2f2dfe-fa49-44d9-8828-05676bbeaaaa # create one acm and provide here
        alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]' 
        alb.ingress.kubernetes.io/group.name: expense
        
spec:
  ingressClassName: alb
  rules:
  -  host: "app1.devops-aws.tech"
     http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app1
            port:
              number: 80